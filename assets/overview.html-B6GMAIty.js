import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as n,c as d,a as e,b as o,d as r,e as c}from"./app-CARt6Xo2.js";const a={},s=c('<h1 id="docker概述" tabindex="-1"><a class="header-anchor" href="#docker概述"><span>Docker概述</span></a></h1><h2 id="什么是docker" tabindex="-1"><a class="header-anchor" href="#什么是docker"><span>什么是Docker？</span></a></h2><p><code>Docker</code>是<code>dotCloud</code>团队在2013年发布的开源项目。 使用<code>Go</code>语言开发，是一个轻量级的虚拟机容器解决方案。</p><h2 id="为什么使用docker" tabindex="-1"><a class="header-anchor" href="#为什么使用docker"><span>为什么使用Docker？</span></a></h2><p>Docker跟传统虚拟机相比，具有以下优势：</p><ul><li>更高效的利用系统资源</li><li>更快速的启动速度</li><li>一致的运行环境</li><li>持续交付和部署</li><li>更轻松的迁移</li><li>更轻松的维护和扩展</li></ul><p><strong><code>Docker</code> VS <code>传统虚拟机</code></strong></p><table><thead><tr><th>特性</th><th>容器</th><th>虚拟机</th></tr></thead><tbody><tr><td>启动</td><td>秒级</td><td>分钟级</td></tr><tr><td>硬盘使用</td><td>一般为 MB</td><td>一般为 GB</td></tr><tr><td>性能</td><td>接近原生</td><td>弱于</td></tr><tr><td>系统支持量</td><td>单机支持上千个容器</td><td>一般几十个</td></tr></tbody></table><h2 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念"><span>基本概念</span></a></h2>',9),p=c("<li><strong>镜像（Image）</strong>：Docker镜像是一个只读的模板，包含了运行容器所需的所有文件。 <ul><li>本质是<mark>文件系统</mark></li><li>基于<code>Union FS</code>设计，<strong>分层存储</strong>，可以叠加</li></ul></li><li><strong>容器（Container）</strong>：Docker容器是可独立运行的一个或一组应用，是Docker镜像的运行实例。 <ul><li>实质是<mark>进程</mark></li><li>拥有自己的<code>root</code>文件系统，网络配置，进程空间等</li><li>最佳实践：文件写入操作使用<strong>数据卷（Volume）</strong>，避免文件写入到容器中</li></ul></li>",2),k=e("strong",null,"仓库（Repository）",-1),h={href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://cloud.google.com/artifact-registry/docs?hl=zh-cn",target:"_blank",rel:"noopener noreferrer"},u={href:"https://aws.amazon.com/cn/ecr/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/goharbor/harbor",target:"_blank",rel:"noopener noreferrer"},D={href:"https://www.sonatype.com/docker",target:"_blank",rel:"noopener noreferrer"},_=c('<h2 id="docker执行流程" tabindex="-1"><a class="header-anchor" href="#docker执行流程"><span>Docker执行流程</span></a></h2><ul><li>客户端发指令 → 守护进程接收指令 → 检查镜像(本地/Docker Hub) → 创建容器 → 启动并运行。</li></ul><figure><img src="http://img.geekyspace.cn/pictures/2024/202411152359021.png" alt="Docker执行流程" tabindex="0" loading="lazy"><figcaption>Docker执行流程</figcaption></figure><h2 id="docker架构" tabindex="-1"><a class="header-anchor" href="#docker架构"><span>Docker架构</span></a></h2><p>Docker 的架构设计基于 <strong>客户端-服务器模型</strong>，主要包含以下核心组件：</p><figure><img src="http://img.geekyspace.cn/pictures/2024/202411262315598.webp" alt="Docker架构" tabindex="0" loading="lazy"><figcaption>Docker架构</figcaption></figure><ol><li><strong>Client（客户端）</strong> ：用户与Docker交互的界面，通过命令行或API发送指令给Docker daemon。 <ul><li><code>docker run</code>：创建并启动一个容器。</li><li><code>docker build</code>：根据Dockerfile构建一个新的镜像。</li><li><code>docker pull</code>：从注册中心拉取一个镜像。</li><li><code>docker push</code>：将本地镜像推送到注册中心。</li></ul></li><li><strong>Docker daemon（守护进程）</strong> ：Docker引擎的核心，负责监听、处理客户端的指令，并管理Docker对象（镜像、容器等）。 <ul><li><code>镜像管理</code>：管理本地镜像，包括存储、加载和删除。</li><li><code>容器管理</code>：创建、启动、停止、删除容器。</li><li><code>网络管理</code>：为容器提供网络接口。</li><li><code>存储管理</code>：管理容器的数据卷。</li></ul></li><li><strong>Images（镜像）</strong> ：Docker镜像是一个只读的模板，包含了运行容器所需的所有文件 <ul><li><code>分层结构</code>：镜像由多层组成，每一层代表一个构建步骤。</li><li><code>只读</code>：镜像是只读的，保证了镜像内容的不可变性。</li></ul></li><li><strong>Containers（容器）</strong> ：Docker容器是镜像的运行实例，是应用程序的运行环境。 <ul><li><code>隔离性</code>：每个容器都有独立的文件系统、网络配置和进程空间。</li><li><code>可复用性</code>：基于同一个镜像可以创建多个容器实例。</li></ul></li><li><strong>Registry（注册中心）</strong> ：用于存储和分发Docker镜像的仓库。 <ul><li><code>集中存储</code>：将镜像存储在集中式的仓库中，方便管理和共享。</li><li><code>版本控制</code>：支持镜像的版本管理。</li></ul></li></ol>',7);function f(y,b){const t=i("ExternalLinkIcon");return n(),d("div",null,[s,e("ul",null,[p,e("li",null,[k,o("：Docker Registry是一个集中存储、分发镜像服务。 "),e("ul",null,[e("li",null,[e("a",h,[o("Docker Hub"),r(t)]),o(" 官方镜像仓库")]),e("li",null,[e("a",g,[o("Google Container Registry"),r(t)]),o(" K8s 镜像仓库")]),e("li",null,[e("a",u,[o("Amazon ECR"),r(t)]),o(" AWS 镜像仓库")]),e("li",null,[e("a",m,[o("VMWare Harbor"),r(t)]),o(" 和 "),e("a",D,[o("Sonatype Nexus"),r(t)]),o(" 三方软件实现了Docker Registry API")])])])]),_])}const w=l(a,[["render",f],["__file","overview.html.vue"]]),C=JSON.parse('{"path":"/md/docker/overview.html","title":"Docker概述","lang":"zh-CN","frontmatter":{"title":"Docker概述","shortTitle":null,"description":"Docker概述 什么是Docker？ Docker是dotCloud团队在2013年发布的开源项目。 使用Go语言开发，是一个轻量级的虚拟机容器解决方案。 为什么使用Docker？ Docker跟传统虚拟机相比，具有以下优势： 更高效的利用系统资源 更快速的启动速度 一致的运行环境 持续交付和部署 更轻松的迁移 更轻松的维护和扩展 Docker VS...","icon":null,"cover":null,"author":"流浪码客","isOriginal":true,"sticky":false,"star":false,"date":"2024-11-15T00:00:00.000Z","category":"Docker","tag":["docker"],"head":[["meta",{"property":"og:url","content":"https://www.geekyspace.cn/md/docker/overview.html"}],["meta",{"property":"og:title","content":"Docker概述"}],["meta",{"property":"og:description","content":"Docker概述 什么是Docker？ Docker是dotCloud团队在2013年发布的开源项目。 使用Go语言开发，是一个轻量级的虚拟机容器解决方案。 为什么使用Docker？ Docker跟传统虚拟机相比，具有以下优势： 更高效的利用系统资源 更快速的启动速度 一致的运行环境 持续交付和部署 更轻松的迁移 更轻松的维护和扩展 Docker VS..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"http://img.geekyspace.cn/pictures/2024/202411152359021.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-15T17:07:35.000Z"}],["meta",{"property":"article:author","content":"流浪码客"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:published_time","content":"2024-11-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-15T17:07:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker概述\\",\\"image\\":[\\"http://img.geekyspace.cn/pictures/2024/202411152359021.png\\",\\"http://img.geekyspace.cn/pictures/2024/202411262315598.webp\\"],\\"datePublished\\":\\"2024-11-15T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-15T17:07:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"流浪码客\\"}]}"]]},"headers":[{"level":2,"title":"什么是Docker？","slug":"什么是docker","link":"#什么是docker","children":[]},{"level":2,"title":"为什么使用Docker？","slug":"为什么使用docker","link":"#为什么使用docker","children":[]},{"level":2,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[]},{"level":2,"title":"Docker执行流程","slug":"docker执行流程","link":"#docker执行流程","children":[]},{"level":2,"title":"Docker架构","slug":"docker架构","link":"#docker架构","children":[]}],"git":{"createdTime":1731684364000,"updatedTime":1742058455000,"contributors":[{"name":"kai","email":"kkdlut@hotmail.com","commits":5},{"name":"joeljhou","email":"joeljhou336@gmail.com","commits":1}]},"readingTime":{"minutes":2.83,"words":850},"filePathRelative":"md/docker/overview.md","localizedDate":"2024年11月15日","excerpt":"\\n<h2>什么是Docker？</h2>\\n<p><code>Docker</code>是<code>dotCloud</code>团队在2013年发布的开源项目。 使用<code>Go</code>语言开发，是一个轻量级的虚拟机容器解决方案。</p>\\n<h2>为什么使用Docker？</h2>\\n<p>Docker跟传统虚拟机相比，具有以下优势：</p>\\n<ul>\\n<li>更高效的利用系统资源</li>\\n<li>更快速的启动速度</li>\\n<li>一致的运行环境</li>\\n<li>持续交付和部署</li>\\n<li>更轻松的迁移</li>\\n<li>更轻松的维护和扩展</li>\\n</ul>\\n<p><strong><code>Docker</code> VS <code>传统虚拟机</code></strong></p>","copyright":{"author":"流浪码客"},"autoDesc":true}');export{w as comp,C as data};
