import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as n,o as r,c as o,a as e,b as a,d as l,e as s}from"./app-CARt6Xo2.js";const c={},d=e("h1",{id:"java新版本特性-持续连载",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#java新版本特性-持续连载"},[e("span",null,"Java新版本特性（持续连载）")])],-1),v=e("p",null,[a("为了帮助大家跟上最新的技术潮流，计划启动一个专栏，重点分享Java领域的前沿知识。 这个专栏将详细解读从"),e("strong",null,"Java 8 - 最新版本"),a("的各种有趣的新特性。 会持续不断地发布相关内容，希望大家能够关注并收藏起来，跟随我们一起深入了解Java的最新进展！")],-1),h=e("p",null,"详细了解Java Enhancement Proposals（JEPs）及其最新动态",-1),p={href:"https://openjdk.java.net/jeps/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://howtodoinjava.com/series/java-versions-features/",target:"_blank",rel:"noopener noreferrer"},u=s('<h2 id="java-23-in-development" tabindex="-1"><a class="header-anchor" href="#java-23-in-development"><span>Java 23(in development)</span></a></h2><h2 id="java-22-ga-2024-03-19" tabindex="-1"><a class="header-anchor" href="#java-22-ga-2024-03-19"><span>Java 22(GA 2024/03/19)</span></a></h2><ul><li>423: Region Pinning for G1</li><li>447: Statements before super(...) (Preview)</li><li>454: Foreign Function &amp; Memory API</li><li>456: Unnamed Variables &amp; Patterns</li><li>457: Class-File API (Preview)</li><li>458: Launch Multi-File Source-Code Programs</li><li>459: String Templates (Second Preview)</li><li>460: Vector API (Seventh Incubator)</li><li>461: Stream Gatherers (Preview)</li><li>462: Structured Concurrency (Second Preview)</li><li>463: Implicitly Declared Classes and Instance Main Methods (Second Preview)</li><li>464: Scoped Values (Second Preview)</li></ul><h2 id="java-21-ga-2023-09-19" tabindex="-1"><a class="header-anchor" href="#java-21-ga-2023-09-19"><span>Java 21(GA 2023/09/19)</span></a></h2><ul><li><a href="Java21/jep430-string-templates">430: String Templates (Preview)</a></li><li><a href="Java21/jep431-sequenced-collections">431: Sequenced Collections</a></li><li><a href="Java21/jep439-generational-zgc">439: Generational ZGC</a></li><li><a href="Java21/jep440-record-partterns">440: Record Patterns</a></li><li><a href="Java21/jep441-pattern-matching-for-switch">441: Pattern Matching for switch</a></li><li>442: Foreign Function &amp; Memory API (Third Preview)</li><li>443: Unnamed Patterns and Variables (Preview)</li><li><a href="Java21/jep444-virtual-threads">444: Virtual Threads</a></li><li>445: Unnamed Classes and Instance Main Methods (Preview)</li><li>446: Scoped Values (Preview)</li><li>448: Vector API (Sixth Incubator)</li><li>449: Deprecate the Windows 32-bit x86 Port for Removal</li><li>451: Prepare to Disallow the Dynamic Loading of Agents</li><li>452: Key Encapsulation Mechanism API</li><li>453: Structured Concurrency (Preview)</li></ul><h2 id="java-20-ga-2023-03-21" tabindex="-1"><a class="header-anchor" href="#java-20-ga-2023-03-21"><span>Java 20(GA 2023/03/21)</span></a></h2><ul><li>429: Scoped Values (Incubator)</li><li>432: Record Patterns (Second Preview)</li><li>433: Pattern Matching for switch (Fourth Preview)</li><li>434: Foreign Function &amp; Memory API (Second Preview)</li><li>436: Virtual Threads (Second Preview)</li><li>437: Structured Concurrency (Second Incubator)</li><li>438: Vector API (Fifth Incubator)</li></ul><h2 id="java-19-ga-2022-09-20" tabindex="-1"><a class="header-anchor" href="#java-19-ga-2022-09-20"><span>Java 19(GA 2022/09/20)</span></a></h2><ul><li>405: Record Patterns (Preview)</li><li>422: Linux/RISC-V Port</li><li>424: Foreign Function &amp; Memory API (Preview)</li><li>425: Virtual Threads (Preview)</li><li>426: Vector API (Fourth Incubator)</li><li>427: Pattern Matching for switch (Third Preview)</li><li>428: Structured Concurrency (Incubator)</li></ul><h2 id="java-18-ga-2022-03-22" tabindex="-1"><a class="header-anchor" href="#java-18-ga-2022-03-22"><span>Java 18(GA 2022/03/22)</span></a></h2><ul><li><a href="Java18/jep400-utf8-by-default">400: UTF-8 by Default</a></li><li><a href="Java18/jep408-simple-web-server">408: Simple Web Server</a></li><li><a href="Java18/jep413-code-snippets-in-api-documentation">413: Code Snippets in Java API Documentation</a></li><li>416: Reimplement Core Reflection with Method Handles</li><li>417: Vector API (Third Incubator)</li><li>418: Internet-Address Resolution SPI</li><li>419: Foreign Function &amp; Memory API (Second Incubator)</li><li>420: Pattern Matching for switch (Second Preview)</li><li>421: Deprecate Finalization for Removal</li></ul><h2 id="java-17-ga-2021-09-14" tabindex="-1"><a class="header-anchor" href="#java-17-ga-2021-09-14"><span>Java 17(GA 2021/09/14)</span></a></h2><ul><li>306: Restore Always-Strict Floating-Point Semantics</li><li>356: Enhanced Pseudo-Random Number Generators</li><li>382: New macOS Rendering Pipeline</li><li>391: macOS/AArch64 Port</li><li>398: Deprecate the Applet API for Removal</li><li>403: Strongly Encapsulate JDK Internals</li><li><a href="Java17/jep406-pattern-matching-for-switch-preview">406: Pattern Matching for switch (Preview)</a></li><li>407: Remove RMI Activation</li><li><a href="Java17/jep409-sealed-classes">409: Sealed Classes</a></li><li>410: Remove the Experimental AOT and JIT Compiler</li><li>411: Deprecate the Security Manager for Removal</li><li>412: Foreign Function &amp; Memory API (Incubator)</li><li>414: Vector API (Second Incubator)</li><li>415: Context-Specific Deserialization Filters</li></ul><h2 id="java-16-ga-2021-03-16" tabindex="-1"><a class="header-anchor" href="#java-16-ga-2021-03-16"><span>Java 16(GA 2021/03/16)</span></a></h2><ul><li>338: Vector API (Incubator)</li><li>347: Enable C++14 Language Features</li><li>357: Migrate from Mercurial to Git</li><li>369: Migrate to GitHub</li><li>376: ZGC: Concurrent Thread-Stack Processing</li><li>380: Unix-Domain Socket Channels</li><li>386: Alpine Linux Port</li><li>387: Elastic Metaspace</li><li>388: Windows/AArch64 Port</li><li>389: Foreign Linker API (Incubator)</li><li>390: Warnings for Value-Based Classes</li><li>392: Packaging Tool</li><li>393: Foreign-Memory Access API (Third Incubator)</li><li><a href="Java16/jep394-pattern-matching-for-instanceof">394: Pattern Matching for instanceof</a></li><li><a href="Java16/jep395-records">395: Records</a></li><li>396: Strongly Encapsulate JDK Internals by Default</li><li>397: Sealed Classes (Second Preview)</li></ul><h2 id="java-15-ga-2020-09-15" tabindex="-1"><a class="header-anchor" href="#java-15-ga-2020-09-15"><span>Java 15(GA 2020/09/15)</span></a></h2><ul><li>339: Edwards-Curve Digital Signature Algorithm (EdDSA)</li><li>360: Sealed Classes (Preview)</li><li><a href="Java15/jep371-hidden-classes">371: Hidden Classes</a></li><li>372: Remove the Nashorn JavaScript Engine</li><li>373: Reimplement the Legacy DatagramSocket API</li><li>374: Disable and Deprecate Biased Locking</li><li>375: Pattern Matching for instanceof (Second Preview)</li><li>377: ZGC: A Scalable Low-Latency Garbage Collector</li><li><a href="Java15/jep378-text-blocks">378: Text Blocks</a></li><li>379: Shenandoah: A Low-Pause-Time Garbage Collector</li><li>381: Remove the Solaris and SPARC Ports</li><li>383: Foreign-Memory Access API (Second Incubator)</li><li>384: Records (Second Preview)</li><li>385: Deprecate RMI Activation for Removal</li></ul><h2 id="java-14-ga-2020-03-17" tabindex="-1"><a class="header-anchor" href="#java-14-ga-2020-03-17"><span>Java 14(GA 2020/03/17)</span></a></h2><ul><li>305: Pattern Matching for instanceof (Preview)</li><li>343: Packaging Tool (Incubator)</li><li>345: NUMA-Aware Memory Allocation for G1</li><li>349: JFR Event Streaming</li><li>352: Non-Volatile Mapped Byte Buffers</li><li>358: Helpful NullPointerExceptions</li><li>359: Records (Preview)</li><li><a href="Java14/jep361-switch-expressions">361: Switch Expressions (Standard)</a></li><li>362: Deprecate the Solaris and SPARC Ports</li><li>363: Remove the Concurrent Mark Sweep (CMS) Garbage Collector</li><li>364: ZGC on macOS</li><li>365: ZGC on Windows</li><li>366: Deprecate the ParallelScavenge + SerialOld GC Combination</li><li>367: Remove the Pack200 Tools and API</li><li>368: Text Blocks (Second Preview)</li><li>370: Foreign-Memory Access API (Incubator)</li></ul><h2 id="java-13-ga-2019-09-17" tabindex="-1"><a class="header-anchor" href="#java-13-ga-2019-09-17"><span>Java 13(GA 2019/09/17)</span></a></h2><ul><li>350: Dynamic CDS Archives</li><li>351: ZGC: Uncommit Unused Memory</li><li>353: Reimplement the Legacy Socket API</li><li>354: Switch Expressions (Preview)</li><li>355: Text Blocks (Preview)</li></ul><h2 id="java-12-ga-2019-03-19" tabindex="-1"><a class="header-anchor" href="#java-12-ga-2019-03-19"><span>Java 12(GA 2019/03/19)</span></a></h2><ul><li>189: Shenandoah: A Low-Pause-Time Garbage Collector (Experimental)</li><li>230: Microbenchmark Suite</li><li>325: Switch Expressions (Preview)</li><li>334: JVM Constants API</li><li>340: One AArch64 Port, Not Two</li><li>341: Default CDS Archives</li><li>344: Abortable Mixed Collections for G1</li><li>346: Promptly Return Unused Committed Memory from G1</li></ul><h2 id="java-11-ga-2018-09-25" tabindex="-1"><a class="header-anchor" href="#java-11-ga-2018-09-25"><span>Java 11(GA 2018/09/25)</span></a></h2><ul><li>181: Nest-Based Access Control</li><li>309: Dynamic Class-File Constants</li><li>315: Improve Aarch64 Intrinsics</li><li>318: Epsilon: A No-Op Garbage Collector</li><li><a href="Java11/jep320-remove-JavaEE-CORBA">320: Remove the Java EE and CORBA Modules</a></li><li>321: HTTP Client (Standard)</li><li>323: Local-Variable Syntax for Lambda Parameters</li><li>324: Key Agreement with Curve25519 and Curve448</li><li>327: Unicode 10</li><li>328: Flight Recorder</li><li>329: ChaCha20 and Poly1305 Cryptographic Algorithms</li><li>330: Launch Single-File Source-Code Programs</li><li>331: Low-Overhead Heap Profiling</li><li>332: Transport Layer Security (TLS) 1.3</li><li>333: ZGC: A Scalable Low-Latency Garbage Collector(Experimental)</li><li>335: Deprecate the Nashorn JavaScript Engine</li><li>336: Deprecate the Pack200 Tools and API</li></ul><h2 id="java-10-ga-2018-03-20" tabindex="-1"><a class="header-anchor" href="#java-10-ga-2018-03-20"><span>Java 10(GA 2018/03/20)</span></a></h2><ul><li><a href="Java10/jep286-local-variable-type-inference">286: Local-Variable Type Inference</a></li><li>296: Consolidate the JDK Forest into a Single Repository</li><li>304: Garbage-Collector Interface</li><li>307: Parallel Full GC for G1</li><li>310: Application Class-Data Sharing</li><li>312: Thread-Local Handshakes</li><li>313: Remove the Native-Header Generation Tool (Javah)</li><li>314: Additional Unicode Language-Tag Extensions</li><li>316: Heap Allocation on Alternative Memory Devices</li><li>317: Experimental Java-Based JIT Compiler</li><li>319: Root Certificates</li><li>322: Time-Based Release Versioning</li></ul><h2 id="java-9-ga-2017-09-21" tabindex="-1"><a class="header-anchor" href="#java-9-ga-2017-09-21"><span>Java 9(GA 2017/09/21)</span></a></h2><ul><li>102: Process API Updates</li><li>110: HTTP 2 Client</li><li>143: Improve Contended Locking</li><li>158: Unified JVM Logging</li><li>165: Compiler Control</li><li>193: Variable Handles</li><li>197: Segmented Code Cache</li><li>199: Smart Java Compilation, Phase Two</li><li>200: The Modular JDK</li><li>201: Modular Source Code</li><li>211: Elide Deprecation Warnings on Import Statements</li><li>212: Resolve Lint and Doclint Warnings</li><li>213: Milling Project Coin</li><li>214: Remove GC Combinations Deprecated in JDK 8</li><li>215: Tiered Attribution for javac</li><li>216: Process Import Statements Correctly</li><li>217: Annotations Pipeline 2.0</li><li>219: Datagram Transport Layer Security (DTLS)</li><li>220: Modular Run-Time Images</li><li>221: Simplified Doclet API</li><li><a href="Java9/jep222-jshell">222: jshell: The Java Shell (Read-Eval-Print Loop)</a></li><li>223: New Version-String Scheme</li><li>224: HTML5 Javadoc</li><li>225: Javadoc Search</li><li>226: UTF-8 Property Files</li><li>227: Unicode 7.0</li><li>228: Add More Diagnostic Commands</li><li>229: Create PKCS12 Keystores by Default</li><li>231: Remove Launch-Time JRE Version Selection</li><li>232: Improve Secure Application Performance</li><li>233: Generate Run-Time Compiler Tests Automatically</li><li>235: Test Class-File Attributes Generated by javac</li><li>236: Parser API for Nashorn</li><li>237: Linux/AArch64 Port</li><li>238: Multi-Release JAR Files</li><li>240: Remove the JVM TI hprof Agent</li><li>241: Remove the jhat Tool</li><li>243: Java-Level JVM Compiler Interface</li><li>244: TLS Application-Layer Protocol Negotiation Extension</li><li>245: Validate JVM Command-Line Flag Arguments</li><li>246: Leverage CPU Instructions for GHASH and RSA</li><li>247: Compile for Older Platform Versions</li><li>248: Make G1 the Default Garbage Collector</li><li>249: OCSP Stapling for TLS</li><li>250: Store Interned Strings in CDS Archives</li><li>251: Multi-Resolution Images</li><li>252: Use CLDR Locale Data by Default</li><li>253: Prepare JavaFX UI Controls &amp; CSS APIs for Modularization</li><li>254: Compact Strings</li><li>255: Merge Selected Xerces 2.11.0 Updates into JAXP</li><li>256: BeanInfo Annotations</li><li>257: Update JavaFX/Media to Newer Version of GStreamer</li><li>258: HarfBuzz Font-Layout Engine</li><li>259: Stack-Walking API</li><li>260: Encapsulate Most Internal APIs</li><li>261: Module System</li><li>262: TIFF Image I/O</li><li>263: HiDPI Graphics on Windows and Linux</li><li>264: Platform Logging API and Service</li><li>265: Marlin Graphics Renderer</li><li>266: More Concurrency Updates</li><li>267: Unicode 8.0</li><li>268: XML Catalogs</li><li><a href="Java9/jep269-convenience-factory-methods-for-collections">269: Convenience Factory Methods for Collections</a></li><li>270: Reserved Stack Areas for Critical Sections</li><li>271: Unified GC Logging</li><li>272: Platform-Specific Desktop Features</li><li>273: DRBG-Based SecureRandom Implementations</li><li>274: Enhanced Method Handles</li><li>275: Modular Java Application Packaging</li><li>276: Dynamic Linking of Language-Defined Object Models</li><li>277: Enhanced Deprecation</li><li>278: Additional Tests for Humongous Objects in G1</li><li>279: Improve Test-Failure Troubleshooting</li><li>280: Indify String Concatenation</li><li>281: HotSpot C++ Unit-Test Framework</li><li>282: jlink: The Java Linker</li><li>283: Enable GTK 3 on Linux</li><li>284: New HotSpot Build System</li><li>285: Spin-Wait Hints</li><li>287: SHA-3 Hash Algorithms</li><li>288: Disable SHA-1 Certificates</li><li>289: Deprecate the Applet API</li><li>290: Filter Incoming Serialization Data</li><li>291: Deprecate the Concurrent Mark Sweep (CMS) Garbage Collector</li><li>292: Implement Selected ECMAScript 6 Features in Nashorn</li><li>294: Linux/s390x Port</li><li>295: Ahead-of-Time Compilation</li><li>297: Unified arm32/arm64 Port</li><li>298: Remove Demos and Samples</li><li>299: Reorganize Documentation</li></ul><h2 id="java-8-ga-2014-03-18" tabindex="-1"><a class="header-anchor" href="#java-8-ga-2014-03-18"><span>Java 8(GA 2014/03/18)</span></a></h2>',30);function m(P,f){const i=n("ExternalLinkIcon");return r(),o("div",null,[d,v,h,e("ul",null,[e("li",null,[a("🚀 访问官方网站："),e("a",p,[a("OpenJDK JEPs"),l(i)])]),e("li",null,[a("❄️ 参考howtodoinjava博客："),e("a",g,[a("Java Versions and Features"),l(i)])])]),u])}const j=t(c,[["render",m],["__file","index.html.vue"]]),J=JSON.parse('{"path":"/md/java/features/","title":"Java新版本特性（持续连载）","lang":"zh-CN","frontmatter":{"title":"Java新版本特性（持续连载）","shortTitle":null,"description":"Java 8-21：前沿特性解读系列（持续连载），截至2023年9月中旬，Java已达到第21版本。 尽管如此，众多开发者仍停滞在Java 8的认知水平。为填补这一差距，我们推出专栏，聚焦分享最新Java知识。","icon":"java","cover":null,"author":"流浪码客","isOriginal":true,"sticky":true,"star":true,"date":"2023-12-20T00:00:00.000Z","category":"Java Features","tag":["java"],"head":[["meta",{"property":"og:url","content":"https://www.geekyspace.cn/md/java/features/"}],["meta",{"property":"og:title","content":"Java新版本特性（持续连载）"}],["meta",{"property":"og:description","content":"Java 8-21：前沿特性解读系列（持续连载），截至2023年9月中旬，Java已达到第21版本。 尽管如此，众多开发者仍停滞在Java 8的认知水平。为填补这一差距，我们推出专栏，聚焦分享最新Java知识。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-16T11:19:57.000Z"}],["meta",{"property":"article:author","content":"流浪码客"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:published_time","content":"2023-12-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-16T11:19:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java新版本特性（持续连载）\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-12-20T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-16T11:19:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"流浪码客\\"}]}"]]},"headers":[{"level":2,"title":"Java 23(in development)","slug":"java-23-in-development","link":"#java-23-in-development","children":[]},{"level":2,"title":"Java 22(GA 2024/03/19)","slug":"java-22-ga-2024-03-19","link":"#java-22-ga-2024-03-19","children":[]},{"level":2,"title":"Java 21(GA 2023/09/19)","slug":"java-21-ga-2023-09-19","link":"#java-21-ga-2023-09-19","children":[]},{"level":2,"title":"Java 20(GA 2023/03/21)","slug":"java-20-ga-2023-03-21","link":"#java-20-ga-2023-03-21","children":[]},{"level":2,"title":"Java 19(GA 2022/09/20)","slug":"java-19-ga-2022-09-20","link":"#java-19-ga-2022-09-20","children":[]},{"level":2,"title":"Java 18(GA 2022/03/22)","slug":"java-18-ga-2022-03-22","link":"#java-18-ga-2022-03-22","children":[]},{"level":2,"title":"Java 17(GA 2021/09/14)","slug":"java-17-ga-2021-09-14","link":"#java-17-ga-2021-09-14","children":[]},{"level":2,"title":"Java 16(GA 2021/03/16)","slug":"java-16-ga-2021-03-16","link":"#java-16-ga-2021-03-16","children":[]},{"level":2,"title":"Java 15(GA 2020/09/15)","slug":"java-15-ga-2020-09-15","link":"#java-15-ga-2020-09-15","children":[]},{"level":2,"title":"Java 14(GA 2020/03/17)","slug":"java-14-ga-2020-03-17","link":"#java-14-ga-2020-03-17","children":[]},{"level":2,"title":"Java 13(GA 2019/09/17)","slug":"java-13-ga-2019-09-17","link":"#java-13-ga-2019-09-17","children":[]},{"level":2,"title":"Java 12(GA 2019/03/19)","slug":"java-12-ga-2019-03-19","link":"#java-12-ga-2019-03-19","children":[]},{"level":2,"title":"Java 11(GA 2018/09/25)","slug":"java-11-ga-2018-09-25","link":"#java-11-ga-2018-09-25","children":[]},{"level":2,"title":"Java 10(GA 2018/03/20)","slug":"java-10-ga-2018-03-20","link":"#java-10-ga-2018-03-20","children":[]},{"level":2,"title":"Java 9(GA 2017/09/21)","slug":"java-9-ga-2017-09-21","link":"#java-9-ga-2017-09-21","children":[]},{"level":2,"title":"Java 8(GA 2014/03/18)","slug":"java-8-ga-2014-03-18","link":"#java-8-ga-2014-03-18","children":[]}],"git":{"createdTime":1758021597000,"updatedTime":1758021597000,"contributors":[{"name":"joeljhou","email":"joeljhou336@gmail.com","commits":1}]},"readingTime":{"minutes":5.76,"words":1727},"filePathRelative":"md/java/features/README.md","localizedDate":"2023年12月20日","excerpt":"\\n<p>为了帮助大家跟上最新的技术潮流，计划启动一个专栏，重点分享Java领域的前沿知识。\\n这个专栏将详细解读从<strong>Java 8 - 最新版本</strong>的各种有趣的新特性。\\n会持续不断地发布相关内容，希望大家能够关注并收藏起来，跟随我们一起深入了解Java的最新进展！</p>\\n<p>详细了解Java Enhancement Proposals（JEPs）及其最新动态</p>\\n<ul>\\n<li>🚀 访问官方网站：<a href=\\"https://openjdk.java.net/jeps/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">OpenJDK JEPs</a></li>\\n<li>❄️ 参考howtodoinjava博客：<a href=\\"https://howtodoinjava.com/series/java-versions-features/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Java Versions and Features</a></li>\\n</ul>","copyright":{"author":"流浪码客"}}');export{j as comp,J as data};
