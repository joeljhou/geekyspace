import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as c,o as l,c as i,a as e,b as n,d as s,e as o}from"./app-CARt6Xo2.js";const t={},d=o('<h1 id="top20常用命令" tabindex="-1"><a class="header-anchor" href="#top20常用命令"><span>Top20常用命令</span></a></h1><p>作为一款领先的容器化工具，Docker 提供了强大的功能，让开发者和运维人员能够快速构建、部署和管理应用。 在这篇文章中，我们将介绍 20 条最常用的 Docker 命令，并结合详细说明，帮助大家轻松掌握 Docker 的基本操作。</p><ul><li><a href="#docker-version">1. Docker version</a></li><li><a href="#docker-search">2. Docker search</a></li><li><a href="#docker-pull">3. Docker pull</a></li><li><a href="#docker-run">4. Docker run</a></li><li><a href="#docker-ps">5. Docker ps</a></li><li><a href="#docker-stop">6. Docker stop</a></li><li><a href="#docker-restart">7. Docker restart</a></li><li><a href="#docker-kill">8. Docker kill</a></li><li><a href="#docker-exec">9. Docker exec</a></li><li><a href="#docker-login">10. Docker login</a></li><li><a href="#docker-commit">11. Docker commit</a></li><li><a href="#docker-push">12. Docker push</a></li><li><a href="#docker-network">13. Docker network</a></li><li><a href="#docker-history">14. Docker history</a></li><li><a href="#docker-rmi">15. Docker rmi</a></li><li><a href="#docker-ps--a">16. Docker ps -a</a></li><li><a href="#docker-copy">17. Docker copy</a></li><li><a href="#docker-logs">18. Docker logs</a></li><li><a href="#docker-volume">19. Docker volume</a></li><li><a href="#docker-logout">20. Docker logout</a></li></ul><p><strong>相关文档</strong></p>',4),p={href:"https://docs.docker.com/engine/reference/commandline/cli/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://docs.docker.com/engine/reference/builder/?spm=5176.8351553.0.0.4ef81991wFvDZm",target:"_blank",rel:"noopener noreferrer"},h=o(`<h2 id="docker-version" tabindex="-1"><a class="header-anchor" href="#docker-version"><span>Docker version</span></a></h2><p>用途：显示 Docker 的版本信息。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> version
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://img.geekyspace.cn/pictures/2024/202411231416702.png" alt="docker version" tabindex="0" loading="lazy"><figcaption>docker version</figcaption></figure><h2 id="docker-search" tabindex="-1"><a class="header-anchor" href="#docker-search"><span>Docker search</span></a></h2><p>用途: 用于搜索 Docker Hub 上的镜像。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> search nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://img.geekyspace.cn/pictures/2024/202411231425169.png" alt="docker search nginx" tabindex="0" loading="lazy"><figcaption>docker search nginx</figcaption></figure><h2 id="docker-pull" tabindex="-1"><a class="header-anchor" href="#docker-pull"><span>Docker pull</span></a></h2><p>用途：从 Docker Hub 下载镜像。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://img.geekyspace.cn/pictures/2024/202411231427300.png" alt="docker pull nginx" tabindex="0" loading="lazy"><figcaption>docker pull nginx</figcaption></figure><h2 id="docker-run" tabindex="-1"><a class="header-anchor" href="#docker-run"><span>Docker run</span></a></h2><p>用途：运行一个镜像，并创建一个容器。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> my-mysql <span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span>root <span class="token parameter variable">-p</span> <span class="token number">3307</span>:3306 mysql:8.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数解释：</p><ul><li><code>-d</code>：后台运行容器，并返回 Shell。</li><li><code>-e MYSQL_ROOT_PASSWORD=root</code>：设置环境变量，用于设置 MySQL 的 root 用户密码。</li><li><code>-p 3306:3306</code>：将主机的端口 3306 映射到容器的端口 3306。</li><li><code>mysql:8.0</code>：要下载的镜像的名称。</li></ul><figure><img src="http://img.geekyspace.cn/pictures/2024/202411231444798.png" alt="docker run mysql" tabindex="0" loading="lazy"><figcaption>docker run mysql</figcaption></figure><h2 id="docker-ps" tabindex="-1"><a class="header-anchor" href="#docker-ps"><span>Docker ps</span></a></h2><p>用途：列出当前正在运行的容器。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token function">ps</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="docker-stop" tabindex="-1"><a class="header-anchor" href="#docker-stop"><span>Docker stop</span></a></h2><p>用途：停止一个正在运行的容器。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> stop <span class="token operator">&lt;</span>container_id<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="docker-restart" tabindex="-1"><a class="header-anchor" href="#docker-restart"><span>Docker restart</span></a></h2><p>用途：重启一个容器。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> restart <span class="token operator">&lt;</span>container_id<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="docker-kill" tabindex="-1"><a class="header-anchor" href="#docker-kill"><span>Docker kill</span></a></h2><p>用途：强制停止一个容器。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token function">kill</span> <span class="token operator">&lt;</span>container_id<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="docker-exec" tabindex="-1"><a class="header-anchor" href="#docker-exec"><span>Docker exec</span></a></h2><p>用途：在运行中的容器中执行命令。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> <span class="token operator">&lt;</span>container_id<span class="token operator">&gt;</span> <span class="token function">bash</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数解释：</p><ul><li><code>-it</code>：保持 STDIN 打开并允许使用键盘输入。</li><li><code>&lt;container_id&gt;</code>：要进入的容器的ID。</li><li><code>bash</code>：要执行的命令。</li></ul><figure><img src="http://img.geekyspace.cn/pictures/2024/202411231506412.png" alt="docker exec -it &lt;container_id&gt; bash" tabindex="0" loading="lazy"><figcaption>docker exec -it &lt;container_id&gt; bash</figcaption></figure><h2 id="docker-login" tabindex="-1"><a class="header-anchor" href="#docker-login"><span>Docker login</span></a></h2><p>用途：登录 Docker Hub，用于推送私有镜像。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> login
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://img.geekyspace.cn/pictures/2024/202411231511727.png" alt="docker login" tabindex="0" loading="lazy"><figcaption>docker login</figcaption></figure><h2 id="docker-commit" tabindex="-1"><a class="header-anchor" href="#docker-commit"><span>Docker commit</span></a></h2><p>用途：创建一个镜像，该镜像包含一个容器的当前状态。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> commit <span class="token operator">&lt;</span>container_id<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>image_name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数解释：</p><ul><li><code>&lt;container_id&gt;</code>：要提交为镜像的容器的ID。</li><li><code>&lt;image_name&gt;</code>：新镜像的名称。</li></ul><h2 id="docker-push" tabindex="-1"><a class="header-anchor" href="#docker-push"><span>Docker push</span></a></h2><p>用途：将镜像推送到 Docker Hub。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> push <span class="token operator">&lt;</span>image_name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="docker-network" tabindex="-1"><a class="header-anchor" href="#docker-network"><span>Docker network</span></a></h2><p>用途：管理 Docker 网络。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> network create <span class="token operator">&lt;</span>network_name<span class="token operator">&gt;</span>
<span class="token function">docker</span> network inspect <span class="token operator">&lt;</span>network_name<span class="token operator">&gt;</span>
<span class="token function">docker</span> network <span class="token function">rm</span> <span class="token operator">&lt;</span>network_name<span class="token operator">&gt;</span>
<span class="token function">docker</span> network connect <span class="token operator">&lt;</span>network_name<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>container_id<span class="token operator">&gt;</span>
<span class="token function">docker</span> network disconnect <span class="token operator">&lt;</span>network_name<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>container_id<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参数解释：</p><ul><li><code>&lt;network_name&gt;</code>：要创建、查看、删除或连接的 Docker 网络的名称。</li><li><code>&lt;container_id&gt;</code>：要连接到或断开连接的网络的容器的ID。</li></ul><h2 id="docker-history" tabindex="-1"><a class="header-anchor" href="#docker-history"><span>Docker history</span></a></h2><p>用途：显示镜像的创建历史。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token function">history</span> <span class="token operator">&lt;</span>image_name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数解释：</p><ul><li><code>&lt;image_name&gt;</code>：要查看其创建历史的镜像的名称。</li></ul><h2 id="docker-rmi" tabindex="-1"><a class="header-anchor" href="#docker-rmi"><span>Docker rmi</span></a></h2><p>用途：删除镜像。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> rmi <span class="token operator">&lt;</span>image_id<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="docker-ps-a" tabindex="-1"><a class="header-anchor" href="#docker-ps-a"><span>Docker ps -a</span></a></h2><p>用途：列出所有容器，包括已停止的容器。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://img.geekyspace.cn/pictures/2024/202411231500573.png" alt="docker ps -a" tabindex="0" loading="lazy"><figcaption>docker ps -a</figcaption></figure><h2 id="docker-copy" tabindex="-1"><a class="header-anchor" href="#docker-copy"><span>Docker copy</span></a></h2><p>用途：复制文件或文件夹到容器。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token function">cp</span> <span class="token operator">&lt;</span>host_path<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>container_id<span class="token operator">&gt;</span>:<span class="token operator">&lt;</span>container_path<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数解释：</p><ul><li><code>&lt;host_path&gt;</code>：主机上的文件或文件夹的路径。</li><li><code>&lt;container_id&gt;</code>：要复制文件的容器的ID。</li><li><code>&lt;container_path&gt;</code>：容器内的目标路径。</li></ul><h2 id="docker-logs" tabindex="-1"><a class="header-anchor" href="#docker-logs"><span>Docker logs</span></a></h2><p>用途：查看容器的日志。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> logs <span class="token operator">&lt;</span>container_id<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数解释：</p><ul><li><code>&lt;container_id&gt;</code>：要查看其日志的容器的ID。</li></ul><h2 id="docker-volume" tabindex="-1"><a class="header-anchor" href="#docker-volume"><span>Docker volume</span></a></h2><p>用途：管理 Docker 卷。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> volume create <span class="token operator">&lt;</span>volume_name<span class="token operator">&gt;</span>
<span class="token function">docker</span> volume inspect <span class="token operator">&lt;</span>volume_name<span class="token operator">&gt;</span>
<span class="token function">docker</span> volume <span class="token function">rm</span> <span class="token operator">&lt;</span>volume_name<span class="token operator">&gt;</span>
<span class="token function">docker</span> run <span class="token parameter variable">-v</span> <span class="token operator">&lt;</span>volume_name<span class="token operator">&gt;</span>:/data nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参数解释：</p><ul><li><code>&lt;volume_name&gt;</code>：要创建、查看或删除的卷的名称。</li><li><code>nginx</code>：要运行的镜像名称。</li><li><code>/data</code>：要挂载到容器内的卷的挂载点。</li></ul><h2 id="docker-logout" tabindex="-1"><a class="header-anchor" href="#docker-logout"><span>Docker logout</span></a></h2><p>用途：注销 Docker Hub。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">logout</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,83);function u(g,m){const a=c("ExternalLinkIcon");return l(),i("div",null,[d,e("ul",null,[e("li",null,[e("a",p,[n("Docker 命令参考文档"),s(a)])]),e("li",null,[e("a",k,[n("Dockerfile 镜像构建参考文档"),s(a)])])]),h])}const f=r(t,[["render",u],["__file","top20-commands.html.vue"]]),D=JSON.parse('{"path":"/md/docker/top20-commands.html","title":"Top20常用命令","lang":"zh-CN","frontmatter":{"title":"Top20常用命令","shortTitle":null,"description":"Top20常用命令 作为一款领先的容器化工具，Docker 提供了强大的功能，让开发者和运维人员能够快速构建、部署和管理应用。 在这篇文章中，我们将介绍 20 条最常用的 Docker 命令，并结合详细说明，帮助大家轻松掌握 Docker 的基本操作。 1. Docker version 2. Docker search 3. Docker pull ...","icon":null,"cover":null,"author":"流浪码客","isOriginal":true,"sticky":false,"star":false,"date":"2024-11-23T00:00:00.000Z","category":"Docker","tag":["docker"],"head":[["meta",{"property":"og:url","content":"https://www.geekyspace.cn/md/docker/top20-commands.html"}],["meta",{"property":"og:title","content":"Top20常用命令"}],["meta",{"property":"og:description","content":"Top20常用命令 作为一款领先的容器化工具，Docker 提供了强大的功能，让开发者和运维人员能够快速构建、部署和管理应用。 在这篇文章中，我们将介绍 20 条最常用的 Docker 命令，并结合详细说明，帮助大家轻松掌握 Docker 的基本操作。 1. Docker version 2. Docker search 3. Docker pull ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"http://img.geekyspace.cn/pictures/2024/202411231416702.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-17T04:59:10.000Z"}],["meta",{"property":"article:author","content":"流浪码客"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:published_time","content":"2024-11-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-17T04:59:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Top20常用命令\\",\\"image\\":[\\"http://img.geekyspace.cn/pictures/2024/202411231416702.png\\",\\"http://img.geekyspace.cn/pictures/2024/202411231425169.png\\",\\"http://img.geekyspace.cn/pictures/2024/202411231427300.png\\",\\"http://img.geekyspace.cn/pictures/2024/202411231444798.png\\",\\"http://img.geekyspace.cn/pictures/2024/202411231506412.png\\",\\"http://img.geekyspace.cn/pictures/2024/202411231511727.png\\",\\"http://img.geekyspace.cn/pictures/2024/202411231500573.png\\"],\\"datePublished\\":\\"2024-11-23T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-17T04:59:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"流浪码客\\"}]}"]]},"headers":[{"level":2,"title":"Docker version","slug":"docker-version","link":"#docker-version","children":[]},{"level":2,"title":"Docker search","slug":"docker-search","link":"#docker-search","children":[]},{"level":2,"title":"Docker pull","slug":"docker-pull","link":"#docker-pull","children":[]},{"level":2,"title":"Docker run","slug":"docker-run","link":"#docker-run","children":[]},{"level":2,"title":"Docker ps","slug":"docker-ps","link":"#docker-ps","children":[]},{"level":2,"title":"Docker stop","slug":"docker-stop","link":"#docker-stop","children":[]},{"level":2,"title":"Docker restart","slug":"docker-restart","link":"#docker-restart","children":[]},{"level":2,"title":"Docker kill","slug":"docker-kill","link":"#docker-kill","children":[]},{"level":2,"title":"Docker exec","slug":"docker-exec","link":"#docker-exec","children":[]},{"level":2,"title":"Docker login","slug":"docker-login","link":"#docker-login","children":[]},{"level":2,"title":"Docker commit","slug":"docker-commit","link":"#docker-commit","children":[]},{"level":2,"title":"Docker push","slug":"docker-push","link":"#docker-push","children":[]},{"level":2,"title":"Docker network","slug":"docker-network","link":"#docker-network","children":[]},{"level":2,"title":"Docker history","slug":"docker-history","link":"#docker-history","children":[]},{"level":2,"title":"Docker rmi","slug":"docker-rmi","link":"#docker-rmi","children":[]},{"level":2,"title":"Docker ps -a","slug":"docker-ps-a","link":"#docker-ps-a","children":[]},{"level":2,"title":"Docker copy","slug":"docker-copy","link":"#docker-copy","children":[]},{"level":2,"title":"Docker logs","slug":"docker-logs","link":"#docker-logs","children":[]},{"level":2,"title":"Docker volume","slug":"docker-volume","link":"#docker-volume","children":[]},{"level":2,"title":"Docker logout","slug":"docker-logout","link":"#docker-logout","children":[]}],"git":{"createdTime":1732351430000,"updatedTime":1742187550000,"contributors":[{"name":"kai","email":"kkdlut@hotmail.com","commits":3},{"name":"joeljhou","email":"joeljhou336@gmail.com","commits":2}]},"readingTime":{"minutes":3.16,"words":949},"filePathRelative":"md/docker/top20-commands.md","localizedDate":"2024年11月23日","excerpt":"\\n<p>作为一款领先的容器化工具，Docker 提供了强大的功能，让开发者和运维人员能够快速构建、部署和管理应用。\\n在这篇文章中，我们将介绍 20 条最常用的 Docker 命令，并结合详细说明，帮助大家轻松掌握 Docker 的基本操作。</p>\\n<ul>\\n<li><a href=\\"#docker-version\\">1. Docker version</a></li>\\n<li><a href=\\"#docker-search\\">2. Docker search</a></li>\\n<li><a href=\\"#docker-pull\\">3. Docker pull</a></li>\\n<li><a href=\\"#docker-run\\">4. Docker run</a></li>\\n<li><a href=\\"#docker-ps\\">5. Docker ps</a></li>\\n<li><a href=\\"#docker-stop\\">6. Docker stop</a></li>\\n<li><a href=\\"#docker-restart\\">7. Docker restart</a></li>\\n<li><a href=\\"#docker-kill\\">8. Docker kill</a></li>\\n<li><a href=\\"#docker-exec\\">9. Docker exec</a></li>\\n<li><a href=\\"#docker-login\\">10. Docker login</a></li>\\n<li><a href=\\"#docker-commit\\">11. Docker commit</a></li>\\n<li><a href=\\"#docker-push\\">12. Docker push</a></li>\\n<li><a href=\\"#docker-network\\">13. Docker network</a></li>\\n<li><a href=\\"#docker-history\\">14. Docker history</a></li>\\n<li><a href=\\"#docker-rmi\\">15. Docker rmi</a></li>\\n<li><a href=\\"#docker-ps--a\\">16. Docker ps -a</a></li>\\n<li><a href=\\"#docker-copy\\">17. Docker copy</a></li>\\n<li><a href=\\"#docker-logs\\">18. Docker logs</a></li>\\n<li><a href=\\"#docker-volume\\">19. Docker volume</a></li>\\n<li><a href=\\"#docker-logout\\">20. Docker logout</a></li>\\n</ul>","copyright":{"author":"流浪码客"},"autoDesc":true}');export{f as comp,D as data};
