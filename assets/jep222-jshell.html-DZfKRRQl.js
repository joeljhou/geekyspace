import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as n,e}from"./app-CARt6Xo2.js";const p={},t=e(`<h1 id="java-9-新特性-交互式编程环境jshell" tabindex="-1"><a class="header-anchor" href="#java-9-新特性-交互式编程环境jshell"><span>Java 9 新特性：交互式编程环境JShell</span></a></h1><p>JShell 是 Java 9 引入的一个<strong>交互式编程环境</strong>，它是 Java 编程语言的 REPL（Read-Eval-Print Loop）实现。 REPL 是一种编程环境，允许用户输入表达式并立即看到结果，而无需事先编写和编译完整的程序。 JShell 的目标是提供一个轻量级、灵活且易于使用的工具，使得 Java 开发者能够更直观地编写和测试代码。</p><h2 id="jshell快速入门" tabindex="-1"><a class="header-anchor" href="#jshell快速入门"><span>JShell快速入门</span></a></h2><h3 id="启动jshell" tabindex="-1"><a class="header-anchor" href="#启动jshell"><span>启动JShell</span></a></h3><p>打开终端，然后执行命令：<code>jshell</code>，执行效果如下：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>➜  <span class="token operator">~</span> jshell
<span class="token operator">|</span>  欢迎使用 <span class="token class-name">JShell</span> <span class="token operator">--</span> 版本 <span class="token number">9</span>
<span class="token operator">|</span>  要大致了解该版本<span class="token punctuation">,</span> 请键入<span class="token operator">:</span> <span class="token operator">/</span>help intro

jshell<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="帮助介绍-help-intro" tabindex="-1"><a class="header-anchor" href="#帮助介绍-help-intro"><span>帮助介绍 /help intro</span></a></h3><p>执行 <code>/help intro</code> 命令以获取有关 JShell 工具的简要介绍，<strong>intro</strong> 是主题，提供了关于 jshell 工具的核心概念和使用方法的信息。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>jshell&gt; /help intro
|
|                                   intro
|                                   =====
|
|  使用 jshell 工具可以执行 Java 代码，从而立即获取结果。
|  您可以输入 Java 定义（变量、方法、类等等），例如：int x = 8
|  或 Java 表达式，例如：x + x
|  或 Java 语句或导入。
|  这些小块的 Java 代码称为“片段”。
|
|  这些 jshell 工具命令还可以让您了解和
|  控制您正在执行的操作，例如：/list
|
|  有关命令的列表，请执行：/help

jshell&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="定义变量、方法、类" tabindex="-1"><a class="header-anchor" href="#定义变量、方法、类"><span>定义变量、方法、类</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 定义变量</span>
jshell<span class="token operator">&gt;</span> <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">8</span>
x <span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token number">8</span>

<span class="token comment">// 定义方法</span>
jshell<span class="token operator">&gt;</span> <span class="token keyword">int</span> <span class="token function">square</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>&gt;     <span class="token keyword">return</span> num <span class="token operator">*</span> num<span class="token punctuation">;</span>
   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>&gt; <span class="token punctuation">}</span>
<span class="token operator">|</span>  已创建 方法 <span class="token function">square</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>

<span class="token comment">// 定义类</span>
jshell<span class="token operator">&gt;</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Message</span><span class="token punctuation">{</span>
   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>&gt;     <span class="token keyword">private</span> <span class="token class-name">String</span> msg<span class="token punctuation">;</span>
   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>&gt;     <span class="token keyword">public</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token class-name">String</span> msg<span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>&gt;         <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> msg<span class="token punctuation">;</span>
   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>&gt;     <span class="token punctuation">}</span>
   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>&gt;     <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>&gt;         <span class="token keyword">return</span> msg<span class="token punctuation">;</span>
   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>&gt;     <span class="token punctuation">}</span>
   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>&gt; <span class="token punctuation">}</span>
<span class="token operator">|</span>  已创建 类 <span class="token class-name">Message</span>

jshell<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="执行表达式、调用方法" tabindex="-1"><a class="header-anchor" href="#执行表达式、调用方法"><span>执行表达式、调用方法</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 执行 Java 表达式</span>
jshell<span class="token operator">&gt;</span> x <span class="token operator">+</span> x
$<span class="token number">4</span> <span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token number">16</span>

<span class="token comment">// 调用方法</span>
jshell<span class="token operator">&gt;</span> <span class="token function">square</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
$<span class="token number">5</span> <span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token number">25</span>

    
<span class="token comment">// 创建类实例并调用方法</span>
jshell<span class="token operator">&gt;</span> <span class="token class-name">Message</span> messageObj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, JShell!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
messageObj <span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Message</span><span class="token annotation punctuation">@6d4b1c02</span>

jshell<span class="token operator">&gt;</span> messageObj<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

$<span class="token number">7</span> <span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token string">&quot;Hello, JShell!&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查看定义的变量-vars" tabindex="-1"><a class="header-anchor" href="#查看定义的变量-vars"><span>查看定义的变量：/vars</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>jshell<span class="token operator">&gt;</span> <span class="token operator">/</span>vars
<span class="token operator">|</span>    <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">8</span>
<span class="token operator">|</span>    <span class="token keyword">int</span> $<span class="token number">4</span> <span class="token operator">=</span> <span class="token number">16</span>
<span class="token operator">|</span>    <span class="token keyword">int</span> $<span class="token number">5</span> <span class="token operator">=</span> <span class="token number">25</span>
<span class="token operator">|</span>    <span class="token class-name">Message</span> messageObj <span class="token operator">=</span> <span class="token class-name">Message</span><span class="token annotation punctuation">@6d4b1c02</span>
<span class="token operator">|</span>    <span class="token class-name">String</span> $<span class="token number">7</span> <span class="token operator">=</span> <span class="token string">&quot;Hello, JShell!&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查看定义的方法-methods" tabindex="-1"><a class="header-anchor" href="#查看定义的方法-methods"><span>查看定义的方法：/methods</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>jshell<span class="token operator">&gt;</span> <span class="token operator">/</span>methods
<span class="token operator">|</span>    <span class="token keyword">int</span> <span class="token function">square</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查看定义的类-types" tabindex="-1"><a class="header-anchor" href="#查看定义的类-types"><span>查看定义的类：/types</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>jshell<span class="token operator">&gt;</span> <span class="token operator">/</span>types
<span class="token operator">|</span>    <span class="token keyword">class</span> <span class="token class-name">Message</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="列出输入源条目-list" tabindex="-1"><a class="header-anchor" href="#列出输入源条目-list"><span>列出输入源条目：/list</span></a></h2><p>执行后，可以看到之前在<code>jshell</code>中输入的内容清单：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>jshell<span class="token operator">&gt;</span> <span class="token operator">/</span>list

   <span class="token number">1</span> <span class="token operator">:</span> <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>
   <span class="token number">2</span> <span class="token operator">:</span> <span class="token keyword">int</span> <span class="token function">square</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token keyword">return</span> num <span class="token operator">*</span> num<span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
   <span class="token number">3</span> <span class="token operator">:</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Message</span><span class="token punctuation">{</span>
           <span class="token keyword">private</span> <span class="token class-name">String</span> msg<span class="token punctuation">;</span>
           <span class="token keyword">public</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token class-name">String</span> msg<span class="token punctuation">)</span><span class="token punctuation">{</span>
               <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> msg<span class="token punctuation">;</span>
           <span class="token punctuation">}</span>
           <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
               <span class="token keyword">return</span> msg<span class="token punctuation">;</span>
           <span class="token punctuation">}</span>
       <span class="token punctuation">}</span>
   <span class="token number">4</span> <span class="token operator">:</span> x <span class="token operator">+</span> x
   <span class="token number">5</span> <span class="token operator">:</span> <span class="token function">square</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
   <span class="token number">6</span> <span class="token operator">:</span> <span class="token class-name">Message</span> messageObj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, JShell!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token number">7</span> <span class="token operator">:</span> messageObj<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

jshell<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="编辑源条目-edit" tabindex="-1"><a class="header-anchor" href="#编辑源条目-edit"><span>编辑源条目：/edit</span></a></h2><p>上面通过<code>/list</code>列出了输入的条目信息，下面试试通过<code>/edit</code>编辑下，比如：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>jshell<span class="token operator">&gt;</span> <span class="token operator">/</span>edit <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这将打开编辑器，修改先前定义的 <code>square</code> 方法。</p><p>修改完成后，点击 <strong>accept</strong> 即可</p><h2 id="删除源条目-drop" tabindex="-1"><a class="header-anchor" href="#删除源条目-drop"><span>删除源条目：/drop</span></a></h2><p>使用 <code>/drop</code> 命令可以删除之前输入的源代码块。可以通过指定<strong>名称</strong>或 <strong>ID</strong> 删除特定的源代码块。例如：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>jshell<span class="token operator">&gt;</span> <span class="token operator">/</span>drop <span class="token class-name">Message</span>
<span class="token operator">|</span>  已删除 类 <span class="token class-name">Message</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这将删除之前定义的 <code>Message</code> 类。</p><h2 id="保存文件-save" tabindex="-1"><a class="header-anchor" href="#保存文件-save"><span>保存文件：/save</span></a></h2><p>通过 <code>/save</code> 命令，您可以将 JShell 中的源代码保存到文件中，以便将其保留或与他人共享。例如：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>jshell<span class="token operator">&gt;</span> <span class="token operator">/</span>save myCode<span class="token punctuation">.</span>java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这将把当前所有的源代码保存到一个名为 <code>myCode.java</code> 的文件中。</p><h2 id="打开文件-open" tabindex="-1"><a class="header-anchor" href="#打开文件-open"><span>打开文件：/open</span></a></h2><p>使用 <code>/open</code> 命令可以将文件的内容导入到 JShell 中，以便重新使用或修改。例如：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>jshell<span class="token operator">&gt;</span> <span class="token operator">/</span><span class="token keyword">open</span> <span class="token namespace">myCode<span class="token punctuation">.</span>java</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这将导入之前保存的 <code>myCode.java</code> 文件中的源代码。</p><h2 id="重置jshell-reset" tabindex="-1"><a class="header-anchor" href="#重置jshell-reset"><span>重置jshell：/reset</span></a></h2><p>使用 <code>/reset</code> 命令可以清空 JShell 的状态，包括所有定义的变量、方法和类。例如：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>jshell<span class="token operator">&gt;</span> <span class="token operator">/</span>reset
<span class="token operator">|</span>  正在重置状态
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这将重置 JShell 并清除所有之前定义的内容。</p><h2 id="查看引入的包-imports" tabindex="-1"><a class="header-anchor" href="#查看引入的包-imports"><span>查看引入的包：/imports</span></a></h2><p>使用 <code>/imports</code> 命令可以查看当前已经导入的包。这对于确保您在 JShell 中能够访问所需的类和方法非常有用。例如：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>jshell<span class="token operator">&gt;</span> <span class="token operator">/</span>imports
<span class="token operator">|</span>    <span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这表明已经导入了 <code>java.util</code> 包。</p><h2 id="退出jshell-exit" tabindex="-1"><a class="header-anchor" href="#退出jshell-exit"><span>退出jshell：/exit</span></a></h2><p>使用 <code>/exit</code> 命令可以退出 JShell。如果需要，在命令后可以添加一个整数表达式片段作为退出代码。例如：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>jshell<span class="token operator">&gt;</span> <span class="token operator">/</span>exit <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这将以退出代码 0 退出 JShell。</p><h2 id="查看命令-help" tabindex="-1"><a class="header-anchor" href="#查看命令-help"><span>查看命令：/help</span></a></h2><p>最后，使用 <code>/help</code> 命令可以随时查看 JShell 的帮助信息，了解各种命令和主题的使用方法。例如：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>jshell<span class="token operator">&gt;</span> <span class="token operator">/</span>help
<span class="token operator">|</span>  键入 <span class="token class-name">Java</span> 语言表达式<span class="token punctuation">,</span> 语句或声明。
<span class="token operator">|</span>  或者键入以下命令之一<span class="token operator">:</span>
<span class="token operator">|</span>  <span class="token operator">/</span>list <span class="token punctuation">[</span><span class="token operator">&lt;</span>名称或 id<span class="token operator">&gt;</span><span class="token operator">|</span><span class="token operator">-</span>all<span class="token operator">|</span><span class="token operator">-</span>start<span class="token punctuation">]</span>
<span class="token operator">|</span>  	列出您键入的源
<span class="token operator">|</span>  <span class="token operator">/</span>edit <span class="token operator">&lt;</span>名称或 id<span class="token operator">&gt;</span>
<span class="token operator">|</span>  	编辑源条目
<span class="token operator">|</span>  <span class="token operator">/</span>drop <span class="token operator">&lt;</span>名称或 id<span class="token operator">&gt;</span>
<span class="token operator">|</span>  	删除源条目
<span class="token operator">|</span>  <span class="token operator">/</span>save <span class="token punctuation">[</span><span class="token operator">-</span>all<span class="token operator">|</span><span class="token operator">-</span>history<span class="token operator">|</span><span class="token operator">-</span>start<span class="token punctuation">]</span> <span class="token operator">&lt;</span>文件<span class="token operator">&gt;</span>
<span class="token operator">|</span>  	将片段源保存到文件
<span class="token operator">|</span>  <span class="token operator">/</span><span class="token keyword">open</span> <span class="token generics"><span class="token punctuation">&lt;</span>file<span class="token punctuation">&gt;</span></span>
<span class="token operator">|</span>  	打开文件作为源输入
<span class="token operator">|</span>  <span class="token operator">/</span>vars <span class="token punctuation">[</span><span class="token operator">&lt;</span>名称或 id<span class="token operator">&gt;</span><span class="token operator">|</span><span class="token operator">-</span>all<span class="token operator">|</span><span class="token operator">-</span>start<span class="token punctuation">]</span>
<span class="token operator">|</span>  	列出已声明变量及其值
<span class="token operator">|</span>  <span class="token operator">/</span>methods <span class="token punctuation">[</span><span class="token operator">&lt;</span>名称或 id<span class="token operator">&gt;</span><span class="token operator">|</span><span class="token operator">-</span>all<span class="token operator">|</span><span class="token operator">-</span>start<span class="token punctuation">]</span>
<span class="token operator">|</span>  	列出已声明方法及其签名
<span class="token operator">|</span>  <span class="token operator">/</span>types <span class="token punctuation">[</span><span class="token operator">&lt;</span>名称或 id<span class="token operator">&gt;</span><span class="token operator">|</span><span class="token operator">-</span>all<span class="token operator">|</span><span class="token operator">-</span>start<span class="token punctuation">]</span>
<span class="token operator">|</span>  	列出类型声明
<span class="token operator">|</span>  <span class="token operator">/</span>imports 
<span class="token operator">|</span>  	列出导入的项
<span class="token operator">|</span>  <span class="token operator">/</span>exit <span class="token punctuation">[</span><span class="token operator">&lt;</span>integer<span class="token operator">-</span>expression<span class="token operator">-</span>snippet<span class="token operator">&gt;</span><span class="token punctuation">]</span>
<span class="token operator">|</span>  	退出 jshell 工具
<span class="token operator">|</span>  <span class="token operator">/</span>env <span class="token punctuation">[</span><span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">-</span>path <span class="token operator">&lt;</span>路径<span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token keyword">module</span><span class="token operator">-</span>path <span class="token operator">&lt;</span>路径<span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span>add<span class="token operator">-</span>modules <span class="token operator">&lt;</span>模块<span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token operator">|</span>  	查看或更改评估上下文
<span class="token operator">|</span>  <span class="token operator">/</span>reset <span class="token punctuation">[</span><span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">-</span>path <span class="token operator">&lt;</span>路径<span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token keyword">module</span><span class="token operator">-</span>path <span class="token operator">&lt;</span>路径<span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span>add<span class="token operator">-</span>modules <span class="token operator">&lt;</span>模块<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token operator">|</span>  	重置 jshell 工具
<span class="token operator">|</span>  <span class="token operator">/</span>reload <span class="token punctuation">[</span><span class="token operator">-</span>restore<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span>quiet<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">-</span>path <span class="token operator">&lt;</span>路径<span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token keyword">module</span><span class="token operator">-</span>path <span class="token operator">&lt;</span>路径<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token operator">|</span>  	重置和重放相关历史记录 <span class="token operator">--</span> 当前历史记录或上一个历史记录 <span class="token punctuation">(</span><span class="token operator">-</span>restore<span class="token punctuation">)</span>
<span class="token operator">|</span>  <span class="token operator">/</span>history <span class="token punctuation">[</span><span class="token operator">-</span>all<span class="token punctuation">]</span>
<span class="token operator">|</span>  	您键入的内容的历史记录
<span class="token operator">|</span>  <span class="token operator">/</span>help <span class="token punctuation">[</span><span class="token generics"><span class="token punctuation">&lt;</span>command<span class="token punctuation">&gt;</span></span><span class="token operator">|</span><span class="token generics"><span class="token punctuation">&lt;</span>subject<span class="token punctuation">&gt;</span></span><span class="token punctuation">]</span>
<span class="token operator">|</span>  	获取有关使用 jshell 工具的信息
<span class="token operator">|</span>  <span class="token operator">/</span>set editor<span class="token operator">|</span>start<span class="token operator">|</span>feedback<span class="token operator">|</span>mode<span class="token operator">|</span>prompt<span class="token operator">|</span>truncation<span class="token operator">|</span>format <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token operator">|</span>  	设置配置信息
<span class="token operator">|</span>  <span class="token operator">/</span><span class="token operator">?</span> <span class="token punctuation">[</span><span class="token generics"><span class="token punctuation">&lt;</span>command<span class="token punctuation">&gt;</span></span><span class="token operator">|</span><span class="token generics"><span class="token punctuation">&lt;</span>subject<span class="token punctuation">&gt;</span></span><span class="token punctuation">]</span>
<span class="token operator">|</span>  	获取有关使用 jshell 工具的信息
<span class="token operator">|</span>  <span class="token operator">/</span><span class="token operator">!</span> 
<span class="token operator">|</span>  	重新运行上一个片段 <span class="token operator">--</span> 请参阅 <span class="token operator">/</span>help rerun
<span class="token operator">|</span>  <span class="token operator">/</span><span class="token generics"><span class="token punctuation">&lt;</span>id<span class="token punctuation">&gt;</span></span> 
<span class="token operator">|</span>  	按 <span class="token constant">ID</span> 或 <span class="token constant">ID</span> 范围重新运行片段 <span class="token operator">--</span> 参见 <span class="token operator">/</span>help rerun
<span class="token operator">|</span>  <span class="token operator">/</span><span class="token operator">-</span><span class="token generics"><span class="token punctuation">&lt;</span>n<span class="token punctuation">&gt;</span></span> 
<span class="token operator">|</span>  	重新运行以前的第 n 个片段 <span class="token operator">--</span> 请参阅 <span class="token operator">/</span>help rerun
<span class="token operator">|</span>  
<span class="token operator">|</span>  有关详细信息<span class="token punctuation">,</span> 请键入 <span class="token char">&#39;/help&#39;</span><span class="token punctuation">,</span> 后跟
<span class="token operator">|</span>  命令或主题的名称。
<span class="token operator">|</span>  例如 &#39;<span class="token operator">/</span>help <span class="token operator">/</span>list<span class="token char">&#39; 或 &#39;</span><span class="token operator">/</span>help intro&#39;。主题<span class="token operator">:</span>
<span class="token operator">|</span>  
<span class="token operator">|</span>  intro
<span class="token operator">|</span>  	jshell 工具的简介
<span class="token operator">|</span>  keys
<span class="token operator">|</span>  	类似 readline 的输入编辑的说明
<span class="token operator">|</span>  id
<span class="token operator">|</span>  	片段 <span class="token constant">ID</span> 以及如何使用它们的说明
<span class="token operator">|</span>  shortcuts
<span class="token operator">|</span>  	片段和命令输入提示<span class="token punctuation">,</span> 信息访问以及
<span class="token operator">|</span>  	自动代码生成的按键说明
<span class="token operator">|</span>  context
<span class="token operator">|</span>  	<span class="token operator">/</span>env <span class="token operator">/</span>reload 和 <span class="token operator">/</span>reset 的评估上下文选项的说明
<span class="token operator">|</span>  rerun
<span class="token operator">|</span>  	重新评估以前输入片段的方法的说明

jshell<span class="token operator">&gt;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这将显示 JShell 的主要帮助信息。</p>`,55),o=[t];function l(c,r){return a(),n("div",null,o)}const u=s(p,[["render",l],["__file","jep222-jshell.html.vue"]]),k=JSON.parse('{"path":"/md/java/features/Java9/jep222-jshell.html","title":"Java 9 新特性：交互式编程环境JShell","lang":"zh-CN","frontmatter":{"title":"Java 9 新特性：交互式编程环境JShell","shortTitle":null,"description":"Java 9 新特性：交互式编程环境JShell JShell 是 Java 9 引入的一个交互式编程环境，它是 Java 编程语言的 REPL（Read-Eval-Print Loop）实现。 REPL 是一种编程环境，允许用户输入表达式并立即看到结果，而无需事先编写和编译完整的程序。 JShell 的目标是提供一个轻量级、灵活且易于使用的工具，使得...","icon":null,"cover":null,"author":"流浪码客","isOriginal":true,"sticky":false,"star":false,"date":"2023-12-21T00:00:00.000Z","category":"Java Features","tag":["java"],"order":222,"head":[["meta",{"property":"og:url","content":"https://www.geekyspace.cn/md/java/features/Java9/jep222-jshell.html"}],["meta",{"property":"og:title","content":"Java 9 新特性：交互式编程环境JShell"}],["meta",{"property":"og:description","content":"Java 9 新特性：交互式编程环境JShell JShell 是 Java 9 引入的一个交互式编程环境，它是 Java 编程语言的 REPL（Read-Eval-Print Loop）实现。 REPL 是一种编程环境，允许用户输入表达式并立即看到结果，而无需事先编写和编译完整的程序。 JShell 的目标是提供一个轻量级、灵活且易于使用的工具，使得..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-16T11:19:57.000Z"}],["meta",{"property":"article:author","content":"流浪码客"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:published_time","content":"2023-12-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-16T11:19:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 9 新特性：交互式编程环境JShell\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-12-21T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-16T11:19:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"流浪码客\\"}]}"]]},"headers":[{"level":2,"title":"JShell快速入门","slug":"jshell快速入门","link":"#jshell快速入门","children":[{"level":3,"title":"启动JShell","slug":"启动jshell","link":"#启动jshell","children":[]},{"level":3,"title":"帮助介绍 /help intro","slug":"帮助介绍-help-intro","link":"#帮助介绍-help-intro","children":[]},{"level":3,"title":"定义变量、方法、类","slug":"定义变量、方法、类","link":"#定义变量、方法、类","children":[]},{"level":3,"title":"执行表达式、调用方法","slug":"执行表达式、调用方法","link":"#执行表达式、调用方法","children":[]}]},{"level":2,"title":"查看定义的变量：/vars","slug":"查看定义的变量-vars","link":"#查看定义的变量-vars","children":[]},{"level":2,"title":"查看定义的方法：/methods","slug":"查看定义的方法-methods","link":"#查看定义的方法-methods","children":[]},{"level":2,"title":"查看定义的类：/types","slug":"查看定义的类-types","link":"#查看定义的类-types","children":[]},{"level":2,"title":"列出输入源条目：/list","slug":"列出输入源条目-list","link":"#列出输入源条目-list","children":[]},{"level":2,"title":"编辑源条目：/edit","slug":"编辑源条目-edit","link":"#编辑源条目-edit","children":[]},{"level":2,"title":"删除源条目：/drop","slug":"删除源条目-drop","link":"#删除源条目-drop","children":[]},{"level":2,"title":"保存文件：/save","slug":"保存文件-save","link":"#保存文件-save","children":[]},{"level":2,"title":"打开文件：/open","slug":"打开文件-open","link":"#打开文件-open","children":[]},{"level":2,"title":"重置jshell：/reset","slug":"重置jshell-reset","link":"#重置jshell-reset","children":[]},{"level":2,"title":"查看引入的包：/imports","slug":"查看引入的包-imports","link":"#查看引入的包-imports","children":[]},{"level":2,"title":"退出jshell：/exit","slug":"退出jshell-exit","link":"#退出jshell-exit","children":[]},{"level":2,"title":"查看命令：/help","slug":"查看命令-help","link":"#查看命令-help","children":[]}],"git":{"createdTime":1758021597000,"updatedTime":1758021597000,"contributors":[{"name":"joeljhou","email":"joeljhou336@gmail.com","commits":1}]},"readingTime":{"minutes":5.29,"words":1587},"filePathRelative":"md/java/features/Java9/jep222-jshell.md","localizedDate":"2023年12月21日","excerpt":"\\n<p>JShell 是 Java 9 引入的一个<strong>交互式编程环境</strong>，它是 Java 编程语言的 REPL（Read-Eval-Print Loop）实现。\\nREPL 是一种编程环境，允许用户输入表达式并立即看到结果，而无需事先编写和编译完整的程序。\\nJShell 的目标是提供一个轻量级、灵活且易于使用的工具，使得 Java 开发者能够更直观地编写和测试代码。</p>\\n<h2>JShell快速入门</h2>\\n<h3>启动JShell</h3>\\n<p>打开终端，然后执行命令：<code>jshell</code>，执行效果如下：</p>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code>➜  <span class=\\"token operator\\">~</span> jshell\\n<span class=\\"token operator\\">|</span>  欢迎使用 <span class=\\"token class-name\\">JShell</span> <span class=\\"token operator\\">--</span> 版本 <span class=\\"token number\\">9</span>\\n<span class=\\"token operator\\">|</span>  要大致了解该版本<span class=\\"token punctuation\\">,</span> 请键入<span class=\\"token operator\\">:</span> <span class=\\"token operator\\">/</span>help intro\\n\\njshell<span class=\\"token operator\\">&gt;</span>\\n</code></pre></div>","copyright":{"author":"流浪码客"},"autoDesc":true}');export{u as comp,k as data};
