import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as p,c,a as n,b as a,d as s,e as l}from"./app-CARt6Xo2.js";const r={},u=n("h1",{id:"使用depends-on",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#使用depends-on"},[n("span",null,"使用depends-on")])],-1),i={href:"https://docs.spring.io/spring-framework/reference/core/beans/dependencies/factory-dependson.html#beans-ref-element",target:"_blank",rel:"noopener noreferrer"},d=l(`<p>举个例子：当一个类中的静态初始化器需要被触发时，比如数据库驱动程序的注册。 <code>depends-on</code>属性可以强制容器在初始化<code>beanOne</code> Bean之前先初始化指定的<code>manager</code> Bean。 以下示例使用<code>depends-on</code>属性来表达对单个Bean的依赖：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>beanOne<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ExampleBean<span class="token punctuation">&quot;</span></span> <span class="token attr-name">depends-on</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>manager<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>manager<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ManagerBean<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>要表达对多个Bean的依赖，可以将多个Bean名称作为<code>depends-on</code>属性的值提供（通过逗号、空格和分号进行分隔）：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>beanOne<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ExampleBean<span class="token punctuation">&quot;</span></span> <span class="token attr-name">depends-on</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>manager,accountDao<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>manager<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>manager<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>manager<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ManagerBean<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>accountDao<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>x.y.jdbc.JdbcAccountDao<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),k={class:"hint-container note"},m=n("p",{class:"hint-container-title"},"注",-1),g=n("code",null,"depends-on",-1),h={href:"https://docs.spring.io/spring-framework/reference/core/beans/factory-scopes.html#beans-factory-scopes-singleton",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"depends-on",-1),v=n("code",null,"depends-on",-1);function q(b,B){const e=o("ExternalLinkIcon");return p(),c("div",null,[u,n("p",null,[a("如果一个Bean是另一个Bean的依赖项，这意味着一个Bean被设置为另一个Bean的属性。 可以通过"),n("a",i,[a("<ref/>元素"),s(e)]),a(" 来实现这一点。 然而，有时Bean之间的依赖关系并不那么直接。")]),d,n("div",k,[m,n("p",null,[g,a("属性不仅可以指定初始化时的依赖关系，而且在 "),n("a",h,[a("单例"),s(e)]),a(" Bean的情况下，还可以指定相应的销毁时依赖关系。 "),f,a("指定的依赖Bean会在给定Bean本身被销毁之前被首先销毁。因此，"),v,a("也可以控制关闭顺序。")])])])}const x=t(r,[["render",q],["__file","factory-dependson.html.vue"]]),w=JSON.parse('{"path":"/md/spring-framework/core/dependencies/factory-dependson.html","title":"使用depends-on","lang":"zh-CN","frontmatter":{"title":"使用depends-on","author":"流浪码客","isOriginal":true,"date":"2024-03-26T00:00:00.000Z","category":"Spring","tag":"Spring Framework","description":"使用depends-on 如果一个Bean是另一个Bean的依赖项，这意味着一个Bean被设置为另一个Bean的属性。 可以通过<ref/>元素 来实现这一点。 然而，有时Bean之间的依赖关系并不那么直接。 举个例子：当一个类中的静态初始化器需要被触发时，比如数据库驱动程序的注册。 depends-on属性可以强制容器在初始化beanOne Bean...","head":[["meta",{"property":"og:url","content":"https://www.geekyspace.cn/md/spring-framework/core/dependencies/factory-dependson.html"}],["meta",{"property":"og:title","content":"使用depends-on"}],["meta",{"property":"og:description","content":"使用depends-on 如果一个Bean是另一个Bean的依赖项，这意味着一个Bean被设置为另一个Bean的属性。 可以通过<ref/>元素 来实现这一点。 然而，有时Bean之间的依赖关系并不那么直接。 举个例子：当一个类中的静态初始化器需要被触发时，比如数据库驱动程序的注册。 depends-on属性可以强制容器在初始化beanOne Bean..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-01T18:57:43.000Z"}],["meta",{"property":"article:author","content":"流浪码客"}],["meta",{"property":"article:tag","content":"Spring Framework"}],["meta",{"property":"article:published_time","content":"2024-03-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-01T18:57:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用depends-on\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-26T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-01T18:57:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"流浪码客\\"}]}"]]},"headers":[],"git":{"createdTime":1719508475000,"updatedTime":1740855463000,"contributors":[{"name":"joeljhou","email":"joeljhou336@gmail.com","commits":1},{"name":"kai","email":"kkdlut@hotmail.com","commits":1}]},"readingTime":{"minutes":1.18,"words":354},"filePathRelative":"md/spring-framework/core/dependencies/factory-dependson.md","localizedDate":"2024年3月26日","excerpt":"\\n<p>如果一个Bean是另一个Bean的依赖项，这意味着一个Bean被设置为另一个Bean的属性。\\n可以通过<a href=\\"https://docs.spring.io/spring-framework/reference/core/beans/dependencies/factory-dependson.html#beans-ref-element\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">&lt;ref/&gt;元素</a>\\n来实现这一点。 然而，有时Bean之间的依赖关系并不那么直接。</p>\\n<p>举个例子：当一个类中的静态初始化器需要被触发时，比如数据库驱动程序的注册。\\n<code>depends-on</code>属性可以强制容器在初始化<code>beanOne</code> Bean之前先初始化指定的<code>manager</code> Bean。\\n以下示例使用<code>depends-on</code>属性来表达对单个Bean的依赖：</p>","copyright":{"author":"流浪码客"},"autoDesc":true}');export{x as comp,w as data};
