import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as s,e}from"./app-CARt6Xo2.js";const t={},p=e(`<h1 id="java-10-新特性-局部变量类型推断" tabindex="-1"><a class="header-anchor" href="#java-10-新特性-局部变量类型推断"><span>Java 10 新特性：局部变量类型推断</span></a></h1><p>Java 10 引入了一项新的语言特性，即<strong>局部变量类型推断</strong>（Local-Variable Type Inference）， 它允许在局部变量声明时，根据变量的初始值，推断出变量的数据类型。</p><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h2><p>局部变量类型推断的语法非常简单，只需要将 <code>var</code> 关键字作为局部变量的类型即可。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">var</span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 自动推断 ArrayList&lt;String&gt;</span>
<span class="token keyword">var</span> stream <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">// 自动推断 Stream&lt;String&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><p>相比传统的方式和 Java 7 的钻石操作符（Diamond Operator），Java 10 的局部变量类型推断使得代码更加精炼：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 传统方式（等号两边都需要）</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Java7的钻石操作符（Diamond Operator）（只需要在左边申明类型即可）</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Java10的局部变量类型推断（类型在等号右边决定）</span>
<span class="token keyword">var</span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在使用 var 进行局部变量类型推断时，需要注意以下几点：</p><ol><li>必须在声明的同时进行初始化</li><li>仅限于局部变量，不能用于定义成员变量、方法参数和返回类型</li><li>每次只能定义一个变量，不能复合声明多个变量</li></ol><p>通过使用局部变量类型推断，我们能够在不失代码可读性的前提下，减少了冗余的类型声明，使得代码更加简洁清晰。 这一特性尤其在Lambda表达式、集合初始化等场景下表现突出，提高了代码的书写效率。 在实际项目中，合理运用局部变量类型推断，将有助于代码的维护和阅读。</p>`,11),o=[p];function c(l,i){return n(),s("div",null,o)}const d=a(t,[["render",c],["__file","jep286-local-variable-type-inference.html.vue"]]),k=JSON.parse('{"path":"/md/java/features/Java10/jep286-local-variable-type-inference.html","title":"Java 10 新特性：局部变量类型推断","lang":"zh-CN","frontmatter":{"title":"Java 10 新特性：局部变量类型推断","shortTitle":null,"description":"Java 10 新特性：局部变量类型推断 Java 10 引入了一项新的语言特性，即局部变量类型推断（Local-Variable Type Inference）， 它允许在局部变量声明时，根据变量的初始值，推断出变量的数据类型。 语法 局部变量类型推断的语法非常简单，只需要将 var 关键字作为局部变量的类型即可。 示例 相比传统的方式和 Java ...","icon":null,"cover":null,"author":"流浪码客","isOriginal":true,"date":"2023-12-23T00:00:00.000Z","sticky":false,"star":false,"category":"Java Features","tag":["java"],"order":286,"head":[["meta",{"property":"og:url","content":"https://www.geekyspace.cn/md/java/features/Java10/jep286-local-variable-type-inference.html"}],["meta",{"property":"og:title","content":"Java 10 新特性：局部变量类型推断"}],["meta",{"property":"og:description","content":"Java 10 新特性：局部变量类型推断 Java 10 引入了一项新的语言特性，即局部变量类型推断（Local-Variable Type Inference）， 它允许在局部变量声明时，根据变量的初始值，推断出变量的数据类型。 语法 局部变量类型推断的语法非常简单，只需要将 var 关键字作为局部变量的类型即可。 示例 相比传统的方式和 Java ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-16T11:19:57.000Z"}],["meta",{"property":"article:author","content":"流浪码客"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:published_time","content":"2023-12-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-16T11:19:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 10 新特性：局部变量类型推断\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-12-23T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-16T11:19:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"流浪码客\\"}]}"]]},"headers":[{"level":2,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]}],"git":{"createdTime":1758021597000,"updatedTime":1758021597000,"contributors":[{"name":"joeljhou","email":"joeljhou336@gmail.com","commits":1}]},"readingTime":{"minutes":1.58,"words":474},"filePathRelative":"md/java/features/Java10/jep286-local-variable-type-inference.md","localizedDate":"2023年12月23日","excerpt":"\\n<p>Java 10 引入了一项新的语言特性，即<strong>局部变量类型推断</strong>（Local-Variable Type Inference），\\n它允许在局部变量声明时，根据变量的初始值，推断出变量的数据类型。</p>\\n<h2>语法</h2>\\n<p>局部变量类型推断的语法非常简单，只需要将 <code>var</code> 关键字作为局部变量的类型即可。</p>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">var</span> list <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ArrayList</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>  <span class=\\"token comment\\">// 自动推断 ArrayList&lt;String&gt;</span>\\n<span class=\\"token keyword\\">var</span> stream <span class=\\"token operator\\">=</span> list<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">stream</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>          <span class=\\"token comment\\">// 自动推断 Stream&lt;String&gt;</span>\\n</code></pre></div>","copyright":{"author":"流浪码客"},"autoDesc":true}');export{d as comp,k as data};
