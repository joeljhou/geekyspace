import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as l,c as i,a as n,b as a,d as t,e}from"./app-CARt6Xo2.js";const c={},r=n("h1",{id:"spring-framework-快速开始",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#spring-framework-快速开始"},[n("span",null,"Spring Framework 快速开始")])],-1),u=n("blockquote",null,[n("p",null,[n("strong",null,"IntelliJ IDEA"),a(" 提供的专用项目向导，您能够快速创建Spring应用程序，这也是创建Spring应用程序的最佳方式之一。")])],-1),k={href:"https://www.jetbrains.com/help/idea/your-first-spring-application.html",target:"_blank",rel:"noopener noreferrer"},g=e(`<p>在本教程中，您将学习如何公开HTTP端点并将其映射到一个方法，当用户通过Web浏览器访问时，该方法会向用户返回问候信息。</p><h2 id="创建-spring-boot项目" tabindex="-1"><a class="header-anchor" href="#创建-spring-boot项目"><span>创建 Spring Boot项目</span></a></h2><ol><li>在主菜单中，转到 <strong>文件(File) | 新建(New) | 项目(Project)</strong></li><li>在 <strong>新建项目(New Project)</strong> 对话框中，选择 <code>Spring Initializr</code></li><li>指定项目的名称 <mark>spring-boot-tutorial</mark>，单击 <strong>下一步(Next)</strong> 继续</li></ol><figure><img src="https://img.geekyspace.cn/pictures/2024/spring-new-project-initializr.png" alt="Spring Initializr in the New Project wizard" tabindex="0" loading="lazy"><figcaption>Spring Initializr in the New Project wizard</figcaption></figure><ol start="4"><li>在<strong>Web</strong>组下选择<strong>Spring Web</strong>依赖项，然后单击 <strong>创建(Create)</strong> 生成并设置项目</li></ol><figure><img src="https://img.geekyspace.cn/pictures/2024/spring-new-project-dependencies.png" alt="Spring Dependencies in the New Project wizard" tabindex="0" loading="lazy"><figcaption>Spring Dependencies in the New Project wizard</figcaption></figure><h2 id="添加-sayhello-方法" tabindex="-1"><a class="header-anchor" href="#添加-sayhello-方法"><span>添加 sayHello() 方法</span></a></h2><p><code>Spring Initializr</code> 会创建一个带有 <code>main()</code> 方法的类来启动你的 Spring 应用程序。</p><ol><li>转到 &quot;<strong>导航(Navigate) | 文件(File )</strong>&quot;，搜索<code>SpringBootTutorialApplication.java</code>文件并打开</li></ol><figure><img src="https://img.geekyspace.cn/pictures/2024/spring-boot-tutorial-gotofile.png" alt="Using Go To File to open SpringBootTutorialApplication.java" tabindex="0" loading="lazy"><figcaption>Using Go To File to open SpringBootTutorialApplication.java</figcaption></figure><ol start="2"><li>添加 <code>sayHello()</code> 方法，并包含所有必要的注解和导入：</li></ol><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>springboottutorial</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestParam</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpringBootTutorialApplication</span> <span class="token punctuation">{</span>

   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">SpringBootTutorialApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">)</span>
   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;myName&quot;</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">&quot;World&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;Hello %s!&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>sayHello()</code>方法接受一个名字参数，并返回与参数值组合的<code>Hello</code>单词。其余的工作由添加Spring注解来处理：</p><ul><li><code>@RestController</code>注解将<code>SpringBootTutorialApplication</code>类标记为请求处理程序（<mark>REST控制器</mark>）。</li><li><code>@GetMapping(&quot;/hello&quot;)</code>注解将<code>sayHello()</code>方法<mark>映射</mark>到GET请求的<code>/hello</code>路径。 *<code> @RequestParam</code>注解将名字<strong>方法参数</strong><mark>映射</mark>到<code>myName</code> Web请求参数。如果您在Web请求中未提供<code>myName</code> 参数，则默认为<code>World</code>。</li></ul><h2 id="运行spring应用程序" tabindex="-1"><a class="header-anchor" href="#运行spring应用程序"><span>运行Spring应用程序</span></a></h2><p><strong>IntelliJ IDEA</strong> 创建了一个<code> Spring Boot</code> 运行配置，您可以使用它来运行新 <code>Spring</code> 应用程序。</p><ul><li>如果选择了运行配置，请按 <code>Shift</code> <code>F10</code>键。</li><li>还可以点击 <code>SpringBootTutorialApplication.java</code> 文件<code> main()</code>方法旁边的▶️图标运行。</li></ul><p>默认情况下，IntelliJ IDEA 会在运行工具窗口中显示你正在运行的 Spring Boot 应用程序。</p><figure><img src="https://img.geekyspace.cn/pictures/2024/spring-boot-demo-run-console_dark.png" alt="The Run tool window with a running Spring Boot application" tabindex="0" loading="lazy"><figcaption>The Run tool window with a running Spring Boot application</figcaption></figure>`,19),d={href:"http://localhost:8080/hello",target:"_blank",rel:"noopener noreferrer"},m=n("figure",null,[n("img",{src:"https://img.geekyspace.cn/pictures/2024/spring-boot-web-browser-hello-world.png",alt:"Spring Boot Hello World response in the browser",tabindex:"0",loading:"lazy"}),n("figcaption",null,"Spring Boot Hello World response in the browser")],-1),h={href:"http://localhost:8080/hello?myName=Human",target:"_blank",rel:"noopener noreferrer"},v=n("h2",{id:"添加主页",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#添加主页"},[n("span",null,"添加主页")])],-1),b=n("code",null,"/hello",-1),w={href:"http://localhost:8080/",target:"_blank",rel:"noopener noreferrer"},f=e(`<ol><li>请在 <code>/src/main/resources/static/</code> 下创建 <code>index.html</code> 文件。</li><li>你可以修改默认模板或者使用以下 HTML 代码替换它：</li></ol><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">HTML</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>您的第一个 Spring 应用程序<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Content-Type<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/html; charset=UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/hello<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>问候全世界！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ifm</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/hello<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>GET<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nameForm<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nameField<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>应用程序应该怎样称呼您？<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myName<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nameField<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>问候我！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ifm</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),y=n("strong",null,"重新运行",-1),S=n("code",null,"Shift",-1),_=n("code",null,"F10",-1),q={href:"http://localhost:8080/",target:"_blank",rel:"noopener noreferrer"},T=n("code",null,"index.html",-1),j=n("figure",null,[n("img",{src:"https://img.geekyspace.cn/pictures/2024/image-20240316015405566.png",alt:"image-20240316015405566",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20240316015405566")],-1),x=n("h2",{id:"下一个教程",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#下一个教程"},[n("span",null,"下一个教程")])],-1),B={href:"https://www.jetbrains.com/help/idea/spring-support-tutorial.html",target:"_blank",rel:"noopener noreferrer"};function N(z,A){const s=o("ExternalLinkIcon");return l(),i("div",null,[r,u,n("p",null,[a("参考🚀 ："),n("a",k,[a("Jetbrains 创建第一个Spring应用程序"),t(s)])]),g,n("p",null,[a("控制台选项卡显示 Spring 日志消息的输出。 默认情况下，内置的 Apache Tomcat 服务器正在监听端口 8080。 打开你的网络浏览器并访问 "),n("a",d,[a("http://localhost:8080/hello"),t(s)]),a("。 如果你操作正确，你应该会看到你的应用程序以 Hello World! 回应。")]),m,n("p",null,[a("这是默认的响应。你可以在你的网络请求中提供一个参数，让应用程序知道如何适当地问候你。 例如，尝试访问 "),n("a",h,[a("http://localhost:8080/hello?myName=Human"),t(s)]),a("。")]),v,n("p",null,[a("创建的 Spring Boot 应用程序在 "),b,a(" 路径下有一个端点可用。 然而，如果你在 "),n("a",w,[a("http://localhost:8080/"),t(s)]),a(" 中打开你的应用程序的根上下文，你会收到错误，因为没有定义根资源。 让我们添加一个静态 HTML 首页，其中包含指向你端点的链接。")]),f,n("p",null,[a('3.在运行工具窗口中，点击 "'),y,a('" 按钮，或按下 '),S,a(" + "),_,a("。 现在你的应用程序将会在 "),n("a",q,[a("http://localhost:8080/"),t(s)]),a(" 上作为根资源提供 "),T,a(" 页面。")]),j,x,n("p",null,[a("这个简单的应用程序演示了如何开始使用 Spring。 要了解 IntelliJ IDEA 如何帮助你编写代码并在运行时管理应用程序， 请参考下一个教程，该教程重点介绍更高级的 "),n("a",B,[a("Spring 支持功能"),t(s)]),a("。")])])}const F=p(c,[["render",N],["__file","quickstart.html.vue"]]),P=JSON.parse('{"path":"/md/spring-framework/overview/quickstart.html","title":"Spring Framework 快速开始","lang":"zh-CN","frontmatter":{"title":"Spring Framework 快速开始","icon":"spring","author":"流浪码客","isOriginal":true,"date":"2024-03-15T00:00:00.000Z","category":"Spring","tag":"Spring Framework","description":"Spring Framework 快速开始 IntelliJ IDEA 提供的专用项目向导，您能够快速创建Spring应用程序，这也是创建Spring应用程序的最佳方式之一。 参考🚀 ：Jetbrains 创建第一个Spring应用程序 在本教程中，您将学习如何公开HTTP端点并将其映射到一个方法，当用户通过Web浏览器访问时，该方法会向用户返回问候...","head":[["meta",{"property":"og:url","content":"https://www.geekyspace.cn/md/spring-framework/overview/quickstart.html"}],["meta",{"property":"og:title","content":"Spring Framework 快速开始"}],["meta",{"property":"og:description","content":"Spring Framework 快速开始 IntelliJ IDEA 提供的专用项目向导，您能够快速创建Spring应用程序，这也是创建Spring应用程序的最佳方式之一。 参考🚀 ：Jetbrains 创建第一个Spring应用程序 在本教程中，您将学习如何公开HTTP端点并将其映射到一个方法，当用户通过Web浏览器访问时，该方法会向用户返回问候..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://img.geekyspace.cn/pictures/2024/spring-new-project-initializr.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-01T18:57:43.000Z"}],["meta",{"property":"article:author","content":"流浪码客"}],["meta",{"property":"article:tag","content":"Spring Framework"}],["meta",{"property":"article:published_time","content":"2024-03-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-01T18:57:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring Framework 快速开始\\",\\"image\\":[\\"https://img.geekyspace.cn/pictures/2024/spring-new-project-initializr.png\\",\\"https://img.geekyspace.cn/pictures/2024/spring-new-project-dependencies.png\\",\\"https://img.geekyspace.cn/pictures/2024/spring-boot-tutorial-gotofile.png\\",\\"https://img.geekyspace.cn/pictures/2024/spring-boot-demo-run-console_dark.png\\",\\"https://img.geekyspace.cn/pictures/2024/spring-boot-web-browser-hello-world.png\\",\\"https://img.geekyspace.cn/pictures/2024/image-20240316015405566.png\\"],\\"datePublished\\":\\"2024-03-15T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-01T18:57:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"流浪码客\\"}]}"]]},"headers":[{"level":2,"title":"创建 Spring Boot项目","slug":"创建-spring-boot项目","link":"#创建-spring-boot项目","children":[]},{"level":2,"title":"添加 sayHello() 方法","slug":"添加-sayhello-方法","link":"#添加-sayhello-方法","children":[]},{"level":2,"title":"运行Spring应用程序","slug":"运行spring应用程序","link":"#运行spring应用程序","children":[]},{"level":2,"title":"添加主页","slug":"添加主页","link":"#添加主页","children":[]},{"level":2,"title":"下一个教程","slug":"下一个教程","link":"#下一个教程","children":[]}],"git":{"createdTime":1719508475000,"updatedTime":1740855463000,"contributors":[{"name":"joeljhou","email":"joeljhou336@gmail.com","commits":1},{"name":"kai","email":"kkdlut@hotmail.com","commits":1}]},"readingTime":{"minutes":3.58,"words":1075},"filePathRelative":"md/spring-framework/overview/quickstart.md","localizedDate":"2024年3月15日","excerpt":"\\n<blockquote>\\n<p><strong>IntelliJ IDEA</strong> 提供的专用项目向导，您能够快速创建Spring应用程序，这也是创建Spring应用程序的最佳方式之一。</p>\\n</blockquote>\\n<p>参考🚀 ：<a href=\\"https://www.jetbrains.com/help/idea/your-first-spring-application.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Jetbrains 创建第一个Spring应用程序</a></p>\\n<p>在本教程中，您将学习如何公开HTTP端点并将其映射到一个方法，当用户通过Web浏览器访问时，该方法会向用户返回问候信息。</p>","copyright":{"author":"流浪码客"},"autoDesc":true}');export{F as comp,P as data};
